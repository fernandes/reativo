module <%= class_name %>::Operation
  class Create < Trailblazer::Operation
    class Present < Trailblazer::Operation
      step ->(options, params) { options["representer.render.class"] = <%= class_name %>::Representer::Create }
      step ->(options, params) { options["representer.errors.class"] = Reativo::Representer::Errors }
      step Model(<%= model_name %>, :new)
      step Contract::Build( constant: <%= class_name %>::Contract::Create )
    end

    step Nested( Present )
    step Contract::Build(constant: <%= class_name %>::Contract::Create)
    step Contract::Validate(key: '<%= model_name.demodulize.underscore %>')
    step Contract::Persist()
  end
end
